diff -duprN mm/lib/Kconfig.debug n/lib/Kconfig.debug
--- mm/lib/Kconfig.debug	2016-09-20 17:40:05.000000000 +0530
+++ n/lib/Kconfig.debug	2017-03-31 10:42:42.000000000 +0530
@@ -81,6 +81,12 @@ config MAGIC_SYSRQ
 	  keys are documented in <file:Documentation/sysrq.txt>. Don't say Y
 	  unless you really know what this hack does.
 
+config SKIP_BACKTRACE_ALLCPUS_SYSRQ
+	bool "Skip SysRq key <l>"
+	depends on MAGIC_SYSRQ
+	help
+	  You don't have to use SysRq-l if you mind it.
+
 config STRIP_ASM_SYMS
 	bool "Strip assembler-generated symbols during link"
 	default n
diff -duprN mm/lib/asn1_decoder.c n/lib/asn1_decoder.c
--- mm/lib/asn1_decoder.c	2016-09-20 17:40:05.000000000 +0530
+++ n/lib/asn1_decoder.c	2017-03-31 10:42:42.000000000 +0530
@@ -69,7 +69,7 @@ next_tag:
 
 	/* Extract a tag from the data */
 	tag = data[dp++];
-	if (tag == 0) {
+	if (tag == ASN1_EOC) {
 		/* It appears to be an EOC. */
 		if (data[dp++] != 0)
 			goto invalid_eoc;
@@ -91,10 +91,8 @@ next_tag:
 
 	/* Extract the length */
 	len = data[dp++];
-	if (len <= 0x7f) {
-		dp += len;
-		goto next_tag;
-	}
+	if (len <= 0x7f)
+		goto check_length;
 
 	if (unlikely(len == ASN1_INDEFINITE_LENGTH)) {
 		/* Indefinite length */
@@ -105,14 +103,18 @@ next_tag:
 	}
 
 	n = len - 0x80;
-	if (unlikely(n > sizeof(size_t) - 1))
+	if (unlikely(n > sizeof(len) - 1))
 		goto length_too_long;
 	if (unlikely(n > datalen - dp))
 		goto data_overrun_error;
-	for (len = 0; n > 0; n--) {
+	len = 0;
+	for (; n > 0; n--) {
 		len <<= 8;
 		len |= data[dp++];
 	}
+check_length:
+	if (len > datalen - dp)
+		goto data_overrun_error;
 	dp += len;
 	goto next_tag;
 
diff -duprN mm/lib/kobject_uevent.c n/lib/kobject_uevent.c
--- mm/lib/kobject_uevent.c	2016-09-20 17:40:05.000000000 +0530
+++ n/lib/kobject_uevent.c	2017-03-31 10:42:42.000000000 +0530
@@ -49,6 +49,8 @@ static const char *kobject_actions[] = {
 	[KOBJ_MOVE] =		"move",
 	[KOBJ_ONLINE] =		"online",
 	[KOBJ_OFFLINE] =	"offline",
+	[KOBJ_POLICY_INIT] =	"policy_init",
+	[KOBJ_POLICY_EXIT] =	"policy_exit",
 };
 
 /**
diff -duprN mm/lib/mpi/mpi-pow.c n/lib/mpi/mpi-pow.c
--- mm/lib/mpi/mpi-pow.c	2016-09-20 17:40:06.000000000 +0530
+++ n/lib/mpi/mpi-pow.c	2017-03-31 10:42:42.000000000 +0530
@@ -64,8 +64,13 @@ int mpi_powm(MPI res, MPI base, MPI exp,
 	if (!esize) {
 		/* Exponent is zero, result is 1 mod MOD, i.e., 1 or 0
 		 * depending on if MOD equals 1.  */
-		rp[0] = 1;
 		res->nlimbs = (msize == 1 && mod->d[0] == 1) ? 0 : 1;
+		if (res->nlimbs) {
+			if (mpi_resize(res, 1) < 0)
+				goto enomem;
+			rp = res->d;
+			rp[0] = 1;
+		}
 		res->sign = 0;
 		goto leave;
 	}
