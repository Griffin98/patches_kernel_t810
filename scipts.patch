diff -duprN mm/scripts/Makefile.lib n/scripts/Makefile.lib
--- mm/scripts/Makefile.lib	2016-09-20 17:40:31.000000000 +0530
+++ n/scripts/Makefile.lib	2017-03-31 10:42:46.000000000 +0530
@@ -152,7 +152,9 @@ ld_flags       = $(LDFLAGS) $(ldflags-y)
 dtc_cpp_flags  = -Wp,-MD,$(depfile).pre.tmp -nostdinc                    \
 		 -I$(srctree)/arch/$(SRCARCH)/boot/dts                   \
 		 -I$(srctree)/arch/$(SRCARCH)/boot/dts/include           \
-		 -undef -D__DTS__
+		 -undef -D__DTS__                                        \
+		 -DANDROID_VERSION=$(ANDROID_VERSION)                    \
+		 -DANDROID_MAJOR_VERSION=$(ANDROID_MAJOR_VERSION)
 
 # Finds the multi-part object the current object will be linked into
 modname-multi = $(sort $(foreach m,$(multi-used),\
diff -duprN mm/scripts/android-major-version.sh n/scripts/android-major-version.sh
--- mm/scripts/android-major-version.sh	1970-01-01 05:30:00.000000000 +0530
+++ n/scripts/android-major-version.sh	2017-03-31 10:42:46.000000000 +0530
@@ -0,0 +1,5 @@
+#!/bin/sh
+
+MAJOR=$(echo $1 | cut -d '.' -f 1)
+let MAJOR=MAJOR+103
+printf "%b" "$(printf '\%03o' $MAJOR)"
diff -duprN mm/scripts/android-version.sh n/scripts/android-version.sh
--- mm/scripts/android-version.sh	1970-01-01 05:30:00.000000000 +0530
+++ n/scripts/android-version.sh	2017-03-31 10:42:46.000000000 +0530
@@ -0,0 +1,10 @@
+#!/bin/sh
+
+MAJOR=$(echo $1 | cut -d '.' -f 1)
+MINOR=$(echo $1 | cut -d '.' -f 2)
+PATCH=$(echo $1 | cut -d '.' -f 3)
+if [ "x$PATCH" != "x" ] ; then
+  printf "%d%02d%02d\\n" $MAJOR $MINOR $PATCH
+else
+  printf "%d%02d00\\n" $MAJOR $MINOR
+fi
diff -duprN mm/scripts/find_matching_major.sh n/scripts/find_matching_major.sh
--- mm/scripts/find_matching_major.sh	1970-01-01 05:30:00.000000000 +0530
+++ n/scripts/find_matching_major.sh	2017-03-31 10:42:47.000000000 +0530
@@ -0,0 +1,14 @@
+#!/bin/bash
+
+# find_matching_version src_path version
+TOP_DIR="$1"
+SRC_PATH="$2"
+FULL_SRC_PATH="$1/$2"
+INPUT_VERSION="$3"
+
+if [[ -d "${FULL_SRC_PATH}_${INPUT_VERSION}" ]]
+then
+  printf "${SRC_PATH}_${INPUT_VERSION}"
+else
+  printf "${SRC_PATH}"
+fi
diff -duprN mm/scripts/find_matching_version.sh n/scripts/find_matching_version.sh
--- mm/scripts/find_matching_version.sh	1970-01-01 05:30:00.000000000 +0530
+++ n/scripts/find_matching_version.sh	2017-03-31 10:42:47.000000000 +0530
@@ -0,0 +1,29 @@
+#!/bin/bash
+
+# find_matching_version src_path version
+TOP_DIR="$1"
+SRC_PATH="$2"
+FULL_SRC_PATH="$1/$2"
+INPUT_VERSION="$3"
+
+if [[ -d "${FULL_SRC_PATH}_v${INPUT_VERSION}" ]]
+then
+  printf "${SRC_PATH}_v${INPUT_VERSION}"
+else
+  LIST=$(ls -d ${FULL_SRC_PATH}_v*)
+  PREV_VERSION=${INPUT_VERSION}
+  for i in $LIST
+  do
+    VERSION=${i//${FULL_SRC_PATH}_v/}
+    if [ $VERSION -lt $INPUT_VERSION ]
+    then
+      PREV_VERSION=$VERSION
+    fi
+  done
+  if [ "x$PREV_VERSION" == "x$INPUT_VERSION" ]
+  then
+    printf "${SRC_PATH}"
+  else
+    printf "${SRC_PATH}_v${PREV_VERSION}"
+  fi
+fi
diff -duprN mm/scripts/replace_dir.sh n/scripts/replace_dir.sh
--- mm/scripts/replace_dir.sh	1970-01-01 05:30:00.000000000 +0530
+++ n/scripts/replace_dir.sh	2017-03-31 10:42:47.000000000 +0530
@@ -0,0 +1,24 @@
+#!/bin/sh
+# Support selinux version
+# replace_directory dst src
+DST="$1/$2"
+SRC="$1/$3"
+
+if [ "x${DST}" == "x${SRC}" ]
+then
+  #echo "${DST} and ${SRC} is same"
+  exit 0
+else
+  if [ -d ${SRC} ]
+  then
+    if [ -L ${DST} ]
+    then
+      rm -f ${DST}
+    fi
+    ln -s $(basename ${SRC}) ${DST}
+  else
+    echo "${SRC} does not exit"
+    exit -1
+  fi
+fi
+
